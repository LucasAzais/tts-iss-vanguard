-- Github: https://github.com/LucasAzais/tts-iss-vanguard
-- This project uses Benjamin-Dobell/luabundle git repo to organise this project

-- Naming conventions, hopefully that's understandable
-- Classes: PascalCase
-- Functions: camelCase
-- Global vars: underscore: CONSTANTS_LIKE_THIS and variables_like_this
-- Local vars: camelCase

-- Don't forget to have the saveChest and the Logbook objects on the table to update their script properly

-- Before release
-- TODO: Added scripted logbook, inspired by @TokMor, although I still recommend using the app as it's much better.
-- TODO: Added planetopedia snap points
-- TODO: Can skip player turns if playing with a lower player count
-- TODO: Changed the way the planetary scanner is working as it seems some users were having difficulties interacting with it
-- TODO: Send to drawer button on crew members

-- Maybe later stuff?
-- TODO: Ship book page 24 -> add to the planetary exploration?
-- TODO: Consider hiding the ShipBook elements while they load
-- TODO: Fix card size (section cards in particular) + tutorial cards size and order (unique discovery, mission etc...)

-- TODO: Change upgrade station icons (more transparent?)
-- TODO: Add empty bridge cards tray?
-- TODO: Add a "leave planet" button?

-- Original bag locations: Ship = {-2.79, 1.33, 89.60}, planet = {0.24, 1.30, 89.60}

local Constants = require('Constants')
local Cycle = require('Cycle')
local EventManager = require('EventManager')
local Exploration = require('Exploration')
local GlobalUi = require('GlobalUi')
local Log = require('Log')
local Options = require('Options')
local SearchStation = require('SearchStation')
local Section = require('Section')
local ShipBook = require('ShipBook')
local Ui = require('Ui')
local Utils = require('Utils')
local UpgradeStation = require('UpgradeStation')

------------------------------------------------------

local NOT_INTERACTABLE = {
    
}

local SHOW_ALL_BAGS = false
DEBUG = false

function onLoad(script_state)
    math.randomseed(os.time())

    -- Disable non-interactable objects
    for _, objectGUID in ipairs(NOT_INTERACTABLE) do
        getObjectFromGUID(objectGUID).interactable = false
    end

    -- Parse save data
    local savedData = JSON.decode(script_state) or {}
    -- savedData = {}
    if DEBUG then
        log(savedData)
    end

    Log.init()
    Ui.init()
    Options.init(savedData.options or {})
    ShipBook.init(savedData.ship_book or {})
    Exploration.init(savedData.exploration or {})
    Section.init(savedData.sections or {})
    UpgradeStation.init()
    Cycle.init(savedData.cycle or {})
    SearchStation.init()
    GlobalUi.init()
    Ui.globalRefresh()

    -- Make a button on the trash to show all bags
    local trashObject = getObjectFromGUID(Constants.TRASH_GUID)
    trashObject.createButton({
        position = trashObject.positionToWorld({71, -2, 41}),
        width = 1300,
        height = 350,
        font_size = 170,
        label = 'Show/Hide bags',
        click_function = 'toggleDisplayAllBags',
    })
end

function onSave()
    local dataToSave = {}

    dataToSave.ship_book = ShipBook.save()
    dataToSave.exploration = Exploration.save()
    dataToSave.options = Options.save()
    dataToSave.sections = Section.save()
    dataToSave.cycle = Cycle.save()

    return JSON.encode(dataToSave)
end

function prepareTableForSave()
    if Cycle.getPhase() ~= Cycle.SHIPBOOK then
        Cycle.nextPhase()
    end

    ShipBook.cleanupExistingChapter()
    Section.closeAllDrawers()
end

function loadState(params)
    if params and params.saved_state then
        broadcastToAll('Loading the save chest.', Color.Black)

        -- Reset the UI
        Ui.getRoot():fullWipe()

        -- Reset handlers
        EventManager.wipeHandlers('onObjectCollisionEnter')
        EventManager.wipeHandlers(EventManager.ON_CHAPTER_CLEANUP)

        -- Reload the game
        Wait.condition(function()
            onLoad(params.saved_state)
            broadcastToAll('Save loaded.', Color.Black)
        end, function()
            return not Ui.getRoot().object.UI.loading
        end)
    end
end

function toggleDisplayAllBags()
    SHOW_ALL_BAGS = not SHOW_ALL_BAGS

    Exploration.toggleBagsDisplay(SHOW_ALL_BAGS)
    ShipBook.toggleBagsDisplay(SHOW_ALL_BAGS)
    Section.toggleBagsDisplay(SHOW_ALL_BAGS)
end
